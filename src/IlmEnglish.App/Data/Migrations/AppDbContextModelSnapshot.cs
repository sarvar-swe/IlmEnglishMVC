// <auto-generated />
using System;
using IlmEnglish.App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IlmEnglish.App.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IlmEnglish.App.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("IlmEnglish.App.Models.CourseBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<string>("CoverPageUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("HardCopyUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseBooks");
                });

            modelBuilder.Entity("IlmEnglish.App.Models.CourseBookUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseBookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("UnitNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourseBookId");

                    b.ToTable("CourseBookUnits");
                });

            modelBuilder.Entity("IlmEnglish.App.Models.CourseBookUnitAudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseBookUnitId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MimeType")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseBookUnitId");

                    b.ToTable("CourseBookUnitAudios");
                });

            modelBuilder.Entity("IlmEnglish.App.Models.CourseBookUnitWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseBookUnitId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("English")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Russian")
                        .HasColumnType("text");

                    b.Property<string>("Uzbek")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseBookUnitId");

                    b.ToTable("CourseBookUnitWords");
                });

            modelBuilder.Entity("IlmEnglish.App.Models.CourseBook", b =>
                {
                    b.HasOne("IlmEnglish.App.Models.Course", "Course")
                        .WithMany("Books")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("IlmEnglish.App.Models.CourseBookUnit", b =>
                {
                    b.HasOne("IlmEnglish.App.Models.CourseBook", "CourseBook")
                        .WithMany("Units")
                        .HasForeignKey("CourseBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseBook");
                });

            modelBuilder.Entity("IlmEnglish.App.Models.CourseBookUnitAudio", b =>
                {
                    b.HasOne("IlmEnglish.App.Models.CourseBookUnit", "CourseBookUnit")
                        .WithMany("Audios")
                        .HasForeignKey("CourseBookUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseBookUnit");
                });

            modelBuilder.Entity("IlmEnglish.App.Models.CourseBookUnitWord", b =>
                {
                    b.HasOne("IlmEnglish.App.Models.CourseBookUnit", "CourseBookUnit")
                        .WithMany("Vocabulary")
                        .HasForeignKey("CourseBookUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseBookUnit");
                });

            modelBuilder.Entity("IlmEnglish.App.Models.Course", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("IlmEnglish.App.Models.CourseBook", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("IlmEnglish.App.Models.CourseBookUnit", b =>
                {
                    b.Navigation("Audios");

                    b.Navigation("Vocabulary");
                });
#pragma warning restore 612, 618
        }
    }
}
